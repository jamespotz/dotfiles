- name: Setup ArchLinux
  hosts: localhost
  become: true
  connection: local
  gather_facts: true

  tasks:
    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Update pacman database
      community.general.pacman:
        update_cache: yes

    - name: Install reflector to refresh mirrors
      community.general.pacman:
        name: reflector
        state: present

    - name: Update pacman mirrors (fastest in Asia)
      ansible.builtin.command: >
        reflector --country 'Philippines','Singapore','Japan'
                  --latest 10 --protocol https --sort rate
                  --save /etc/pacman.d/mirrorlist
      become: yes

    - name: Install packages
      community.general.pacman:
        name:
          - base-devel
          - pkgconf
          - cmake
          - ninja
          - gdb
          - lldb
          - git
          - git-delta
          - neovim
          - docker
          - docker-compose
          - fzf
          - lazydocker
          - lazygit
          - starship
          - eza
          - ripgrep
          - btop
          - bat
        state: present

    - name: Ensure yay is installed
      become_user: "{{ remote_regular_user }}"
      kewlfft.aur.aur:
        name: yay
        state: present

    - name: Install AUR packages
      become_user: "{{ remote_regular_user }}"
      kewlfft.aur.aur:
        name:
          - fnm
          - mcfly
          - zoxide
          - wezterm
          - fd
          - zsh-antidote
          - mesa
          - vulkan-dzn
          - vulkan-icd-loader
          - yay
        state: present
        use: yay

    - name: Detect zsh binary path
      ansible.builtin.shell: command -v zsh || true
      register: zsh_path
      changed_when: false

    - name: Ensure detected zsh path is in /etc/shells
      ansible.builtin.lineinfile:
        path: /etc/shells
        line: "{{ zsh_path.stdout }}"
        state: present

    - name: Change default shell to detected zsh for that user
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: "{{ zsh_path.stdout }}"

    - name: Add Docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        groups: docker
        append: true
