# Environment
export GALLIUM_DRIVER="d3d12"
export LIBVA_DRIVER_NAME="d3d12"
export NODE_OPTIONS="--max-old-space-size=8192"
export EDITOR="nvim"
LS_COLORS="dircolors"

setopt prompt_subst
setopt auto_menu               # automatically use menu completion
setopt always_to_end           # move cursor to end if word had one match
setopt auto_list               # automatically list choices on ambiguous completion
autoload bashcompinit && bashcompinit
# Completion styles
zstyle ':completion:*' menu select            # select completions with arrow keys
zstyle ':completion:*' group-name ''          # group results by category
zstyle ':completion:*' completer _expand _complete _ignored _approximate
# --- Completion & core autoloads ---
autoload -Uz compinit
compinit -i

# Antidote (Arch)
source /usr/share/zsh-antidote/antidote.zsh

# Set the root name of the plugins files (.txt and .zsh) antidote will use.
zsh_plugins=${ZDOTDIR:-~}/.zsh_plugins

# Ensure the .zsh_plugins.txt file exists so you can add plugins.
[[ -f ${zsh_plugins}.txt ]] || touch ${zsh_plugins}.txt

# Lazy-load antidote from its functions directory.
fpath=(/usr/share/zsh-antidote/functions $fpath)
autoload -Uz antidote

# Generate a new static file whenever .zsh_plugins.txt is updated.
if [[ ! ${zsh_plugins}.zsh -nt ${zsh_plugins}.txt ]]; then
  antidote bundle <${zsh_plugins}.txt >| ${zsh_plugins}.zsh
fi

# Source your static plugins file.
source ${zsh_plugins}.zsh

# --- Keychain ---
if command -v keychain &> /dev/null; then
  command -v keychain &> /dev/null && keychain -q --nogui $HOME/.ssh/id_ed25519
  source $HOME/.keychain/$HOST-sh
fi

# --- Prompt / title ---
function set_win_title() {
  echo -ne "\033]0; ¿ $USER:$PWD \007"
}
precmd_functions+=(set_win_title)

# --- Fix corrupt history helper ---
function fix_zsh_history() {
  echo "Fixing corrupt .zsh_history file..."
  mv ~/.zsh_history ~/.zsh_history_bad
  strings ~/.zsh_history_bad > ~/.zsh_history
  fc -R ~/.zsh_history
  rm ~/.zsh_history_bad
  echo "Done ¿"
}

# --- Command tools & inits ---
# Autojump / zoxide
eval "$(zoxide init zsh)"

# FNM (Fast Node Manager)
eval "$(fnm env --use-on-cd --shell zsh)"

# wfxr/forgit ctrl-d to drop selected stash but do not quit fzf (gss specific)
FORGIT_STASH_FZF_OPTS='
--bind="ctrl-d:reload(git stash drop $(cut -d: -f1 <<<{}) 1>/dev/null && git stash list)"
'

# Starship and Atuin
eval "$(starship init zsh)"
eval "$(atuin init zsh)"

# Fastfetch (run once at shell startup if available)
if command -v fastfetch &> /dev/null; then
  fastfetch
fi

# WezTerm integration script
if [ -f "/etc/profile.d/wezterm.sh" ]; then
  source "/etc/profile.d/wezterm.sh"
fi

# Auto-Warpify (Warp integration telemetry hook)
if [ -z "$TMUX" ]; then
  [[ "$-" == *i* ]] && printf 'P$f{"hook": "SourcedRcFileForWarp", "value": { "shell": "zsh", "uname": "Linux" }}¿' 
fi

# --- Aliases ---
alias mkdir="mkdir -p"
alias weather='curl -s https://wttr.in/Asingan, Philippines'
alias myip="curl http://ipecho.net/plain; echo"
alias config="nvim $HOME/.zshrc"
alias reload="source $HOME/.zshrc"
alias his_fix="fix_zsh_history"
alias gbda='git branch --no-color --merged | command grep -vE "^(\+|\*|\s*(master|develop|dev)\s*$)" | command xargs -n 1 git branch -d'

if command -v eza &> /dev/null; then
  alias ls="eza -l --icons"
fi

if command -v bat &> /dev/null; then
  alias cat="bat"
fi

if command -v lazygit &> /dev/null; then
  alias lg="lazygit"
fi

if command -v gitui &> /dev/null; then
  alias gu="gitui"
fi

if command -v nvim &> /dev/null; then
  alias vi="nvim"
  alias vim="nvim"
fi

if command -v fdfind &> /dev/null; then
  alias fd="fdfind"
fi

if command -v neovide &> /dev/null; then
  alias nv="neovide"
fi

if command -v lazydocker &> /dev/null; then
  alias lzd="lazydocker"
fi

# Example test aliases (compose-based)
alias test_offer="docker compose build && COLLECTION=offer-engine docker compose -f docker-compose-test.yml -p goose_api_postman_runner up --abort-on-container-exit --remove-orphans"

alias test_user_offer="docker compose build && COLLECTION=user docker compose -f docker-compose-test.yml -p goose_api_postman_runner up --abort-on-container-exit --remove-orphans && COLLECTION=offer-engine docker compose -f docker-compose-test.yml -p goose_api_postman_runner up --abort-on-container-exit --remove-orphans"

# Alias to open this file
alias config="nvim $HOME/.zshrc"

# End of file
